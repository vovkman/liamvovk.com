{"version":3,"sources":["components/navbar.jsx","pages/about.jsx","components/mobile-navbar.jsx","components/scroll-top.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Navbar","react_default","a","createElement","className","About","src","alt","renderSocialImgs","contactImgInfo","map","img","key","href","img_href","target","rel","img_src","img_alt","img_css","MobileNavbar","tabIndex","onClick","e","item","content","parentNode","querySelector","clientHeight","style","height","marginBottom","paddingBottom","borderBottom","concat","scrollHeight","width","ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","children","Component","withRouter","App","HashRouter","scroll_top","navbar_Navbar","mobile_navbar_MobileNavbar","Route","path","exact","render","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mPAGaA,SAAS,kBACpBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iDAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBCJNC,EAAQ,kBACnBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,iEACVE,IAAI,qBACJC,IAAI,mBAENN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAAf,6CAEEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCK,OAKHA,EAAmB,kBACrBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVK,EAAeC,IAAI,SAACC,EAAKC,GAAN,OAChBX,EAAAC,EAAAC,cAAA,KACIU,KAAMF,EAAIG,SACVV,UAAU,GACVW,OAAO,SACPC,IAAI,sBACJJ,IAAKA,GAELX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYE,IAAKK,EAAIM,QAASV,IAAKI,EAAIO,eAMhET,EAAiB,CACnB,CACIQ,QAAS,cACTE,QAAS,SACTL,SAAU,8BACVI,QAAS,UAEb,CACID,QAAS,mBACTE,QAAS,cACTL,SAAU,6BACVI,QAAS,SAEb,CACID,QAAS,gBACTE,QAAS,WACTL,SAAU,wCACVI,QAAS,aCvDJE,SAAe,WAsB1B,OACEnB,EAAAC,EAAAC,cAAA,OACEC,UAAU,wDACViB,SAAU,GAEVpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BiB,SAAU,GACpDpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAcjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYkB,QAzCb,SAAAC,GAChB,IAAMC,EAAOD,EAAER,OACf,GAAIS,EAAM,CACR,IAAIC,EAAUD,EAAKE,WAAWC,cAAc,qBACvCF,IACHA,EAAUD,EAAKE,WAAWA,WAAWA,YAEnCD,EAAQG,cACVH,EAAQI,MAAMC,OAAS,EACvBL,EAAQI,MAAME,aAAe,IAC7BN,EAAQI,MAAMG,cAAgB,IAC9BP,EAAQI,MAAMI,aAAe,SAE7BR,EAAQI,MAAMC,OAAd,GAAAI,OAA0BT,EAAQU,aAAlC,MACAV,EAAQI,MAAMO,MAAQ,OACtBX,EAAQI,MAAME,aAAe,OAC7BN,EAAQI,MAAMG,cAAgB,OAC9BP,EAAQI,MAAMI,aAAe,yCAwB/B,QAGAhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,wBC7CAiC,6LACeC,GACbC,KAAKC,MAAMC,SAASC,WAAaJ,EAAUG,SAASC,UACtDC,OAAOC,SAAS,EAAG,oCAKrB,OAAOL,KAAKC,MAAMK,gBARIC,aAYXC,cAAWV,GCaXW,mLAhBX,OACE/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,KACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgD,EAAD,MACAlD,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQnD,cARxByC,aCEEW,QACW,cAA7Bd,OAAOF,SAASiB,UAEe,UAA7Bf,OAAOF,SAASiB,UAEhBf,OAAOF,SAASiB,SAASC,MACvB,2DCbNC,IAASJ,OAAOvD,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6b72f5b5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navbar = () => (\n  <header className=\"flex-row justify-between items-baseline dn-nl\">\n    <div className=\"heading-2\">LIAM VOVK</div>\n    <nav className=\"main-nav flex-row\">\n      {/*<div className=\"nav\">*/}\n      {/*  <Link to=\"/\">ABOUT</Link>*/}\n      {/*</div>*/}\n\n      {/*<div className=\"nav\">*/}\n      {/*  <Link to=\"/work/\">WORK</Link>*/}\n      {/*</div>*/}\n\n      {/*<div className=\"nav\">*/}\n      {/*  <Link to=\"/contact/\">CONTACT</Link>*/}\n      {/*</div>*/}\n    </nav>\n  </header>\n);\n","import React from 'react';\n\nexport const About = () => (\n  <div className=\"about flex-row flex-column-nxl pt6\">\n    <img\n      className=\"medium-img large-image-nxl flip-img self-start self-center-nxl\"\n      src=\"/taranaki-full.jpg\"\n      alt=\"Mount Taranaki\"\n    />\n    <div className=\"flex-column pl7 pl0-nxl pt4-nxl\">\n      <div className=\"heading-3 pb2\">ABOUT</div>\n      <div className=\"paragraph-3 bb-light-grey\">\n        Improving ad relevance at Amazon using ML.\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n        <br />\n        <br />\n        {renderSocialImgs()}\n    </div>\n  </div>\n);\n\nconst renderSocialImgs = () => (\n    <div className=\"flex-row\">\n        {contactImgInfo.map((img, key) => (\n            <a\n                href={img.img_href}\n                className=\"\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                key={key}\n            >\n                <img className=\"small-img\" src={img.img_src} alt={img.img_alt} />\n            </a>\n        ))}\n    </div>\n);\n\nconst contactImgInfo = [\n    {\n        img_src: '/github.svg',\n        img_css: 'github',\n        img_href: 'https://github.com/vovkman/',\n        img_alt: 'github'\n    },\n    {\n        img_src: '/google-plus.svg',\n        img_css: 'google-plus',\n        img_href: 'mailto:liam.vovk@gmail.com',\n        img_alt: 'email'\n    },\n    {\n        img_src: '/linkedin.svg',\n        img_css: 'linkedin',\n        img_href: 'https://www.linkedin.com/in/liamvovk/',\n        img_alt: 'LinkedIn'\n    }\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const MobileNavbar = () => {\n  const clickItem = e => {\n    const item = e.target;\n    if (item) {\n      let content = item.parentNode.querySelector(\".dropdown-content\");\n      if (!content) {\n        content = item.parentNode.parentNode.parentNode;\n      }\n      if (content.clientHeight) {\n        content.style.height = 0;\n        content.style.marginBottom = \"0\";\n        content.style.paddingBottom = \"0\";\n        content.style.borderBottom = \"none\";\n      } else {\n        content.style.height = `${content.scrollHeight}px`;\n        content.style.width = \"100%\";\n        content.style.marginBottom = \"1rem\";\n        content.style.paddingBottom = \"1rem\";\n        content.style.borderBottom = \"1px solid rgba(153, 153, 153, 0.3)\";\n      }\n    }\n  };\n  return (\n    <div\n      className=\"collapse_item flex-column items-center outline-0 dn-l\"\n      tabIndex={1}\n    >\n      <div className=\"dropdown-content outline-0\" tabIndex={2}>\n        <nav className=\"main-nav flex-column items-center\">\n          {/*<div className=\"nav\" onClick={clickItem}>*/}\n          {/*  <Link to=\"/\">ABOUT</Link>*/}\n          {/*</div>*/}\n\n          {/*<div className=\"nav\" onClick={clickItem}>*/}\n          {/*  <Link to=\"/work/\">WORK</Link>*/}\n          {/*</div>*/}\n\n          {/*<div className=\"nav\" onClick={clickItem}>*/}\n          {/*  <Link to=\"/contact/\">CONTACT</Link>*/}\n          {/*</div>*/}\n        </nav>\n      </div>\n      <div className=\"outline-0\" onClick={clickItem}>\n        MENU\n      </div>\n      <div className=\"heading-2 pt4\">LIAM VOVK</div>\n    </div>\n  );\n};\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Navbar } from \"./components/navbar\";\nimport { About } from \"./pages/about\";\nimport { Work } from \"./pages/work\";\nimport { Contact } from \"./pages/contact\";\nimport { MobileNavbar } from \"./components/mobile-navbar\";\nimport ScrollToTop from \"./components/scroll-top\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <ScrollToTop>\n          <div className=\"App\">\n            <Navbar />\n            <MobileNavbar />\n            <Route path=\"/\" exact render={About} />\n            {/*<Route path=\"/work/\" render={Work} />*/}\n            {/*<Route path=\"/contact/\" render={Contact} />*/}\n          </div>\n        </ScrollToTop>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// window.onscroll = function() {\n//   const elem = document.querySelector(\".header\");\n//   const position = elem.getBoundingClientRect();\n//   // console.log(position);\n//   if (position.y < 200 && !elem.classList.contains(\"transition\")) {\n//     console.log(elem.classList);\n//     elem.classList.toggle(\"transition\");\n//   }\n// };\n"],"sourceRoot":""}